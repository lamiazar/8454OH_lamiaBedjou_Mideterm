***ANSWER ALL QUESTIONS BELOW***

What is a programming language?
Answer:A programming language is a set of commands, instructions, and other syntax use to create a software program.

What is a JDK composed of? Define each components?
Answer:
Java Development Kit (JDK) is a software development environment that offers a collection of tools and libraries necessary for developing Java applications.
Jdk components are:
1-The Runtime Interpreter: is used to interpret the .class Java files that have been compiled by Java compiler (javac). Java interpreter is accessed using java command.
2-The Compiler:Java compiler is javac tool located in /bin folder of the JDK installation directory. The javac tool (accessed using javac command) reads class and interface definitions, written in the Java programming language, and compiles them into bytecode class files.
It can also process annotations in Java source files and classes.
3-The Applet Viewer:is used to view the Java applets. The applet viewer command connects to the documents or resources designated by urls and displays each applet referenced by the documents in its own window.
4-The Debugger:The Java Debugger, jdb, is a simple command-line debugger for Java classes.
It is a demonstration of the Java Platform Debugger Architecture that provides inspection and debugging of a local or remote Java Virtual Machine.
5-The Class File Disassembler:The javap command is the disassembly tool of JDK that disassembles one or more class files. Its output depends on the options used.
If no options are used, javap prints out the package, protected, and public fields and methods of the classes passed to it. The javap prints its output to stdout.
6-The Header :generates header and source files that are needed to implement native methods.
7-The Documentation Generator:Java Documentation helps to maintain code.
The javadoc tool comes as part of Java Development Kit that parses the declarations and documentation comments in a set of Java source files and produces a corresponding set of HTML pages describing (by default) the public and protected classes, nested classes (but not anonymous inner classes), interfaces, constructors, methods, and fields.
8-Applet Demos:are used to provide interactive features to web applications and can be executed by browsers for many platforms. They are small, portable Java programs embedded in HTML pages and can run automatically when the pages are viewed.
9-API Source Code:is an add-on to the Outside In Export SDKs that enables developers to use Java to create applications using Outside In Technology.
What is an IDE?
Answer:
Is a software for building applications that combines common developer tools into a single graphical user interface (GUI).

What are some of the most popular Java IDEs available in the market?
Answer:
IntelliJ IDEA.
jGRASP.
JCreator.
NetBeans.
Greenfoot.
JDeveloper.

Explain the entire java life cycle.
Answer:
First, we will start with typing the program in a text-editor. After completing editing of the program, we have to save the file. While saving the file we should remember that the file must be saved with .java extension.
Second step is compilation. The name of the Java compiler is javac. The input to the compiler is Java source code which is available in Sample.java.
Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM). Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.

What is a class?
Answer:
A class is a user defined blueprint or prototype from which objects are created.It represents the set of properties or methods that are common to all objects of one type.

What is an object?
Answer:
An object is an instance of a class.An object has a state and behavior.
What is the entry point of an application?
Answer:
Main() method is the entry point into the application.

Why is the main() static?
Answer:
Main() is static so that compiler can call it without the creation of an object.

Which class is the superclass of all classes?
Answer:
Java. lang. Object

What is difference between path and classpath variables?
Answer:
The path points to the location of the jre i.e. the java binary files such as the jvm and necessary libraries. The classpath points to the classes you developed so that the jvm can find them and load them when you run your product.

What is the difference between an Interface and Abstract class?
Answer:
1-Interface can have only abstract methods. Abstract class can have abstract and concrete methods.
2-Abstract class can have final, non-final, static and non-static variables. Interface has only static and final variables by default.
3- A Java interface can be implemented using keyword “implements” and abstract class can be extended using keyword “extends”.
4-An interface can extend another Java interface only, an abstract class can extend another Java class and implement multiple Java interfaces.

Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer:Interface and abstract class can't be instantiated.

What is Access Modifier?
Answer:
Are keywords that set the accessibility of classes, methods, and other members.

What is OOP? Define each OOP concept.
Answer:
OOP:is a computer programming model that organizes software design around data, or objects, rather than functions and logic.
we have four OOP concepts:
-Inheritance: is the concept where a class acquires the properties and behaviors of another class.
-Polymorphism:is the ability of a variable, object or function to take on multiple forms.
-Abstraction: is representing essential features without including details.

What is Java Package and which package is imported by default?
Answer:
Package:is used to group related classes.
java. lang package is the package imported by default.

What is an API? List some API's that you have used so far.
Answer:
API: is a way to enable computers to possess a common interface, to allow them to communicate with each other.API give us a list of all the packages, classes, and interfaces, with their fields and methods.
List some API's that you have used so far:
java.lang
java.sql
java.util

Does java support multiple inheritance? Why or why not?
Answer:
No,Java doesn't support multiple inheritance.The reason why is lets assume a class can have two parents,and this two parents has a common method
so when the child class call this method,there will be confusion which method to call.

What is method overloading and when does it happen?
Answer:
Method overloding is the ability to have multiple methods with same name but different parameters(type,order,number of parameters.
overloading is static polymorphism ,and happens at compile-time.

Explain exceptions in java and how to handle them.
Answer:
An Exception is an unwanted event that interrupts the normal flow of the program. When an exception occurs program execution gets terminated.
we handle exception using:
try-catch block
throw,throws
finally block

What is static keyword? When and how do we use it?
Answer:
Static is a keyword that we use to refer to the common property of all objects.

What is final keyword? When and how do we use it?
Answer:
Final is used while we declare an entity,when we use final keyword means that the value can't be modified.

Explain the difference between final, finally and finalize?
Answer:
final keyword can be used with class method and variable.
finally is used to create a block of code that follows a try block in exception.
finalize is a method is used just before object is destroyed and can be called just prior to object creation.

What is a constructor?
Answer:
Is a special method that is used to initialize objects. The constructor is called when an object of a class is created.

Can we have multiple constructors in a class?
Answer:
yes ,we can.
If we don't have a constructor declared, what is called during the object creation?
Answer:
Java compiler always create a default constructor that has no parameters.
What is "this" keyword in Java? When would we use it?
Answer:
this keyword is used to initialize global variables and also used to diferentite when global variable and constructor parameters are the same.
this is also used to call/invoke the current class constructor.
What is "super" keyword in Java? What are some scenarios we would use it?
Answer:
super is used to invoke the parent class constructor.
it is also used to call methods and variables from the super class.

What does JVM stand for?
Answer:
Java Virtual Machine is used  to manage memory and execute environment for Java-based applications.

Is JVM platform independent?
Answer:
JVM is platform dependent.

What version of Java are you using?
Answer:

What does JAR stand for?
Answer:
JAR stands for Java Archive,usually it contains compiled Java code, but sometimes also Java sourcecode.
What is the difference between JDK and JVM?
Answer:

What is the difference between JVM and JRE?
Answer:
JVM iss basically specification that provides a runtime environment in which Java byte code can be executed.
JRE is Java runtime environment which is the implementation of JVM i.e the specifications which are defined in JVM are implemented and creates corresponding environment for the execution of code

Explain the difference between compile-time and run-time?
Answer:
 Compile-time is the time at which the source code is converted into an executable code.
 Run time is the time at which the executable code is started running.
What is heap?
Answer:
The Java heap is the area of memory used to store objects instantiated by applications running on the JVM.

How does Java manage its memory?
Answer:
Java uses an automatic memory management system called a garbage collector.
to manage the memory java is divided:
JVM Memory Structure
Working of the Garbage Collector

What is the difference between String, StringBuffer and StringBuilder?
Answer:
The String class is an immutable class.
StringBuffer is synchronized(thread safe).
StringBuilder is non-synchronized (not thread safe)

What is Singleton class?
Answer:
is a class where we can create only one object.

What is Serialization and Deserialization?
Answer:
Serialization is a mechanism of converting the state of an object into a byte.
Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory.

Explain the difference between While and Do..While loops?
Answer:
In while loop, condition is evaluated first and then the statements inside loop body gets executed.
do-while loop, statements inside do-while gets executed first and then the condition is evaluated.

What is Enum?
Answer:
An enum is a special class that represents a group of constants.

What is Iterator?
Answer:
An Iterator is an object that can be used to loop through collections.

Which one will take more memory: an int or Integer? Why?
Answer:
Integer will take more memory because it takes 128 bits ,where int takes  32 bits.

Why are Strings considered to be immutable in Java?
Answer:
an immutable class is a class whose object cannot be modified.
The value of the immutable class object is initialized at the time of creation.

What is constructor chaining in Java?
Answer:
Constructor chaining is the process of calling one constructor from another constructor with respect to current object.

The difference between Serial and Parallel Garbage Collector?
Answer:
Serial collector uses one thread to execute garbage collection.
Parallel collector uses multiple threads to execute garbage collection.

What does JIT stands for?
Answer:
JIT stands for Just In Time ,JIT is an integral part of the JVM.
 It accelerates execution performance many times over the previous level.


Explain the process of Java garbage collection?
Answer:
Java programs compile to bytecode that can be run on a JVM.
then objects are created on the heap, some objects will no longer be needed.
The garbage collector finds these unused objects and deletes them to free up memory.

Can you guarantee the garbage collection process?
Answer:
No, garbage collection does not guarantee that a program will not run out of memory.

What is the difference between stack and heap in Java?
Answer:
Stack space is mainly used for storing order of method execution and local variables.
Heap memory used dynamic allocation for allocating and deallocating memory blocks.

What is reflection in Java and why is it useful?
Answer:
Reflection allows an executing Java program to examine, and manipulate internal properties of the program.
Reflection is useful when writing a framework that has to interoperate with user-defined classes, where the framework author doesn't know what the members (or even the classes) will be.
Reflection allows them to deal with any class without knowing it in advance.

What is multithreading in Java?
Answer:
Is a feature that allows concurrent execution of two or more parts of a program for maximum utilization of CPU.

What is synchronization in Java?
Answer:
Is the capability to control the access of multiple threads to any shared resource.

What is a Framework?
Answer:
Framework is a large bodies of pre-written code to which you add your own code in order to solve a problem.

What are the testing Frameworks available in Java?
Answer:
Selenium
JUnit
REST Assured
Mockito

What are jUnit and testNG?
Answer:
junit supports the test to run by writing and testing along.
testNG runs the tests in classes. It makes classes for corresponding test and then process them.
TestNG is an advanced framework that overcomes limitations found in JUnit.

What are the dependencies for this project?
Answer:
Class Dependencies
Interface Dependencies
Method

What is dependency injection in Java?
Answer:
Is a technique in which an object receives other objects that it depends on.
These other objects are called dependencies.

Explain what static binding and dynamic binding is?
Answer:
Static binding happens when all information needed to call a function is available at the compile-time.
Dynamic binding happens when all information needed for a function call cannot be determined at compile-time.